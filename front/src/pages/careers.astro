---
import { render } from "astro:content";
import { getCollection } from "astro:content";

import Layout from "../layouts/Layout.astro";
import Text from "../components/base/text/Text.astro";
import JobDetails from "../components/custom/JobDetails.astro";
import JobAccomplishments from "../components/custom/JobAccomplishments.astro";

const allJobPositionHeld = await getCollection("positions");
const jobAccomplishments = await getCollection("accomplishments");

const orderedPosition = allJobPositionHeld.sort(
  (a, b) => b.data.id - a.data.id,
);
---

<Layout title="Careers" activePage="Careers">
  <Text tag="h1">Career History</Text>
  <Text tag="p">
    I have a over a decade of experience working in an engineering setting. I'm
    self taught and eager to understand and be better programmer. Front-end
    development(HTML, CSS, JS: ES5). I'm a maintainer for a medium size Vue.js
    application with JSX and typescript. Toyed around with frame works such as
    React.js, Svealte.js. I like to use Python as a general purpose language for
    writing scripts and manipulate data, build simple APIs with FastAPI,Django.
    I have a engineering experience which allowed me to develop the soft skill
    to work on demanding projects, working across teams to achieve clients'
    requirements and handle project deadlines.
  </Text>
  <hr />
  <div class="career">
    <div>
      {
        orderedPosition.map((x) => (
          <div>
            <JobDetails jobPositions={x} />
            <hr />
          </div>
        ))
      }
    </div>

    <aside class="career__aside">
      <Text tag="h2">Accomplishments</Text>
      {jobAccomplishments.map((x) => <JobAccomplishments accomplishment={x} />)}
    </aside>
  </div>
</Layout>
<style>
  .career {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
  }
  .career__aside {
    background-color: rgb(37, 37, 39);
  }

  @media screen and (max-width: 790px) {
    .career {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr;
    }
  }
</style>
