---
import { getCollection } from "astro:content";

import { Text } from "@components/lib_comps";
import { fade } from "astro:transitions";

const accomplishedDates = await getCollection("accomplishDates");

const dateSorts = new Map();
const yearRange = new Set();

const collectCollection = accomplishedDates.map((entry) => {
  const collectionKey = entry.data.type;
  const colectionEntry = entry.body.split(/\r?\n/).filter((x) => x !== "");
  return { [collectionKey]: colectionEntry };
});

for (var entry of collectCollection) {
  const collectionKey = Object.keys(entry);
  const collectionEntry = Object.values(entry).flat();

  for (const entry of collectionEntry) {
    const rg = /\(([^)]+)\)\s*(.+)$/;
    const matchItem = entry.match(rg);
    const dateKey = matchItem?.[1] || "00";
    const dataContent = matchItem?.[2] || "";

    yearRange.add(dateKey);

    if (dateSorts.has(dateKey)) {
      const dateKeyValue = dateSorts.get(dateKey);
      dateSorts.set(dateKey, [
        ...dateKeyValue,
        { entries: dataContent, type: collectionKey?.[0] },
      ]);
      continue;
    }
    dateSorts.set(dateKey, [
      { entries: dataContent, type: collectionKey?.[0] },
    ]);
    continue;
  }
}
const sortedDateRange = [...yearRange].sort((a: number, b: number) => b - a);
---

<Text tag="h1">The professional/personal accomplishments</Text>
<ul>
  {
    sortedDateRange.map((year) => {
      return dateSorts.get(year).map((contentItems) => (
        <li class:list={[contentItems.type, "base"]}>
          <h3 class="year">{year}</h3>
          <p set:html={contentItems.entries} />
        </li>
      ));
    })
  }
</ul>

<style>
  ul {
    display: flex;
    flex-direction: column;
  }

  .base {
    margin: 10px;
    display: flex;
    gap: 10px;
    padding: 2px;
    border-radius: 5px;
  }
  .developer {
    border: 2px solid rgba(102, 51, 153, 0.8);
  }

  .personal {
    border: 2px solid rgba(102, 51, 153, 0.5);
  }
  .automotive {
    border: 2px solid rgba(102, 51, 153, 0.2);
  }
</style>
