---
import { getCollection } from "astro:content";

import type { ContentCareers } from "@utils/types";
import { DateIt, InternalLink } from "@components/blocks";
import { Text, Box, LinkBreak } from "@components/lib_comps/index";
import { formatContent } from "@utils/helpers";

interface Props {
  providedCareerPositions: ContentCareers[];
}

const { providedCareerPositions = null } = Astro.props;

const currentPositionHeld = async () => {
  const [mostRecent, ...r] = await getCollection("positions", ({ data }) => {
    return data.isCurrent;
  });
  return mostRecent;
};
// if career positions are provided then skip the summary
const defaultCurrentPosition = !providedCareerPositions ? true : false;

const careerStuff = defaultCurrentPosition
  ? await currentPositionHeld()
  : providedCareerPositions;

const jobs = defaultCurrentPosition
  ? await formatContent(careerStuff, "summary")
  : await formatContent(careerStuff, "full");

const { start, end, data, bodyParagraph } = jobs;
---

<Box varient="light" Cssvars={{ sectionMarginControl: "0px " }}>
  {
    defaultCurrentPosition ? (
      <Text tag="h2">
        Current <LinkBreak>Position</LinkBreak>
      </Text>
    ) : null
  }

  <div class="text_box_content">
    <div class="dateit_container">
      <DateIt date={start} />
      <DateIt varient="endDate" text={end} />
    </div>
    <div>
      <Text tag="h3">{data?.jobTitle}</Text>
      <Text tag="p">{bodyParagraph}</Text>
    </div>

    {
      defaultCurrentPosition ? (
        <div class="link_container">
          <InternalLink interPath="./career">Past Positions</InternalLink>
        </div>
      ) : null
    }
  </div>

  <style>
    .text_box_content {
      display: grid;
      grid-template-columns: min-content max(550px) 1fr;
    }
    .dateit_container {
      display: grid;
      grid-template-columns: repeat(2, 85px);
      place-items: center;
      /* grid-template-rows: repeat(2, 100px); */
    }
    .link_container {
      place-self: center;
      align-self: center;
      justify-self: center;
    }
  </style>
</Box>
