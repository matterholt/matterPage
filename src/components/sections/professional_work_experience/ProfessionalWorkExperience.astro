---
import { getCollection } from "astro:content";

import type { ContentCareers } from "@utils/types";
import { DateIt, InternalLink, TitleWDate } from "@components/blocks";
import { Text, Box, LinkBreak, BentoBox } from "@components/lib_comps/index";
import { formatContent } from "@utils/helpers";

interface Props {
  providedCareerPositions?: ContentCareers[];
}

const { providedCareerPositions = [] } = Astro.props;

const currentPositionHeld = async () => {
  const [mostRecent, ...r] = await getCollection("positions", ({ data }) => {
    return data.isCurrent;
  });
  return mostRecent;
};
// if career positions are provided then skip the summary
const defaultCurrentPosition =
  providedCareerPositions.length === 0 ? true : false;

const careerStuff = defaultCurrentPosition
  ? await currentPositionHeld()
  : providedCareerPositions;

const jobs = defaultCurrentPosition
  ? await formatContent(careerStuff, "summary")
  : await formatContent(careerStuff, "full");

const { start, end, data, bodyParagraph } = jobs;

const { Content, headings } = await careerStuff.render();
---

<Box class="customBox" Cssvars={{ sectionMarginControl: "0px " }}>
  {
    defaultCurrentPosition ? (
      <Text tag="h2">
        Current <LinkBreak>Position</LinkBreak>
      </Text>
    ) : null
  }
  <TitleWDate title={data?.jobTitle} start={start} end={end} />

  <div class="text_box_content">

    <BentoBox class="text_postion">
      {
        defaultCurrentPosition ? (
          <Text tag="p">{bodyParagraph}</Text>
        ) : (
          <Content />
        )
      }
    </BentoBox>

    {
      defaultCurrentPosition ? (
        <div class="link_container">
          <InternalLink interPath="./career">Past Positions</InternalLink>
        </div>
      ) : null
    }
  </div>
</Box>

<style>
  .customBox {
    padding: 0px 20px;
    padding-bottom: 50px;
  }

  .dateit_container {
    display: grid;
    grid-template-columns: repeat(2, 85px);
    grid-area: dateit;
  }
  .link_container {
    --internal_link_text_position-top: 5px;
    display: grid;
    place-items: center;
    padding:55px;

    grid-area: linkit;
  }
  .text_postion {
    grid-area: content;
    font-size: 25px;

  }

  @media (max-width: 930px) {
    .text_box_content {
      grid-template-columns: min-content 1fr;
      grid-template-rows: 200px 1fr 1fr;
      min-height: 580px;
      grid-template-areas: "dateit dateit" "content content " "linkit linkit";
    }
  }
</style>
